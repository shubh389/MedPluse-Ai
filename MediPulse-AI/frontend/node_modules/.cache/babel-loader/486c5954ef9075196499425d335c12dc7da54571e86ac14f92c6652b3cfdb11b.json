{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subha\\\\OneDrive\\\\Desktop\\\\mumbai\\\\Agentic Ai\\\\MediPulse-AI\\\\frontend\\\\src\\\\components\\\\PredictionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCurrentAQI, getCurrentWeather } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionForm = ({\n  onSubmit,\n  loading\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    city: 'Delhi',\n    date: new Date().toISOString().split('T')[0],\n    aqi: 150,\n    temperature: 25,\n    outbreak: 0\n  });\n  const [loadingExternalData, setLoadingExternalData] = useState(false);\n  const [errors, setErrors] = useState({});\n  const cities = [{\n    name: 'Delhi',\n    value: 'Delhi'\n  }, {\n    name: 'Mumbai',\n    value: 'Mumbai'\n  }, {\n    name: 'Bangalore',\n    value: 'Bangalore'\n  }, {\n    name: 'Chennai',\n    value: 'Chennai'\n  }, {\n    name: 'Kolkata',\n    value: 'Kolkata'\n  }];\n  const festivals = [{\n    name: 'Diwali',\n    date: '2025-11-02'\n  }, {\n    name: 'Holi',\n    date: '2025-03-14'\n  }, {\n    name: 'Eid',\n    date: '2025-04-10'\n  }, {\n    name: 'Christmas',\n    date: '2025-12-25'\n  }, {\n    name: 'Dussehra',\n    date: '2025-10-12'\n  }];\n  const outbreakLevels = [{\n    value: 0,\n    label: 'No Outbreak',\n    description: 'Normal conditions'\n  }, {\n    value: 1,\n    label: 'Localized',\n    description: 'Small area affected'\n  }, {\n    value: 2,\n    label: 'Regional',\n    description: 'City-wide impact'\n  }, {\n    value: 3,\n    label: 'Epidemic',\n    description: 'Multi-city spread'\n  }];\n\n  // Auto-fetch current environmental data when city changes\n  useEffect(() => {\n    const fetchCurrentData = async () => {\n      if (!formData.city) return;\n      setLoadingExternalData(true);\n      try {\n        const [aqi, weather] = await Promise.all([getCurrentAQI(formData.city), getCurrentWeather(formData.city)]);\n        setFormData(prev => ({\n          ...prev,\n          aqi: Math.round(aqi),\n          temperature: Math.round(weather.temperature * 10) / 10\n        }));\n      } catch (error) {\n        console.error('Failed to fetch current data:', error);\n      } finally {\n        setLoadingExternalData(false);\n      }\n    };\n    fetchCurrentData();\n  }, [formData.city]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.city.trim()) {\n      newErrors.city = 'City is required';\n    }\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date);\n      const today = new Date();\n      const maxDate = new Date();\n      maxDate.setDate(today.getDate() + 30); // Allow up to 30 days in the future\n\n      if (selectedDate > maxDate) {\n        newErrors.date = 'Date cannot be more than 30 days in the future';\n      }\n    }\n    if (formData.aqi < 0 || formData.aqi > 500) {\n      newErrors.aqi = 'AQI must be between 0 and 500';\n    }\n    if (formData.temperature < -50 || formData.temperature > 60) {\n      newErrors.temperature = 'Temperature must be between -50°C and 60°C';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      await onSubmit(formData);\n    } catch (error) {\n      console.error('Form submission error:', error);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n  const getAQIColor = aqi => {\n    if (aqi > 300) return 'text-red-600';\n    if (aqi > 200) return 'text-orange-600';\n    if (aqi > 100) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n  const getAQILabel = aqi => {\n    if (aqi > 300) return 'Hazardous';\n    if (aqi > 200) return 'Very Unhealthy';\n    if (aqi > 150) return 'Unhealthy';\n    if (aqi > 100) return 'Unhealthy for Sensitive Groups';\n    if (aqi > 50) return 'Moderate';\n    return 'Good';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-sm border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"New Patient Load Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Enter the parameters below to generate a forecast for hospital patient admissions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"City *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.city,\n            onChange: e => handleInputChange('city', e.target.value),\n            className: `w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.city ? 'border-red-300' : 'border-gray-300'}`,\n            children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.value,\n              children: city.name\n            }, city.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), errors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600 text-sm mt-1\",\n            children: errors.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: formData.date,\n            onChange: e => handleInputChange('date', e.target.value),\n            min: new Date().toISOString().split('T')[0],\n            max: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n            className: `w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.date ? 'border-red-300' : 'border-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), errors.date && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600 text-sm mt-1\",\n            children: errors.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: [\"Air Quality Index (AQI) *\", loadingExternalData && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-blue-600\",\n                children: \"(Auto-updating...)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.aqi,\n              onChange: e => handleInputChange('aqi', parseInt(e.target.value) || 0),\n              min: \"0\",\n              max: \"500\",\n              className: `w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.aqi ? 'border-red-300' : 'border-gray-300'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-sm font-medium ${getAQIColor(formData.aqi)}`,\n                children: getAQILabel(formData.aqi)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Range: 0-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), errors.aqi && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-600 text-sm mt-1\",\n              children: errors.aqi\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: [\"Temperature (\\xB0C) *\", loadingExternalData && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-blue-600\",\n                children: \"(Auto-updating...)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.temperature,\n              onChange: e => handleInputChange('temperature', parseFloat(e.target.value) || 0),\n              step: \"0.1\",\n              min: \"-50\",\n              max: \"60\",\n              className: `w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${errors.temperature ? 'border-red-300' : 'border-gray-300'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 text-xs text-gray-500\",\n              children: \"Range: -50\\xB0C to 60\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), errors.temperature && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-600 text-sm mt-1\",\n              children: errors.temperature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Festival (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.festival || '',\n            onChange: e => handleInputChange('festival', e.target.value || undefined),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"No Festival\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), festivals.map(festival => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: festival.name,\n              children: [festival.name, \" (\", festival.date, \")\"]\n            }, festival.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"Select if there's a major festival on or around the prediction date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Outbreak Level *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-2\",\n            children: outbreakLevels.map(level => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center p-3 border rounded-md cursor-pointer hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"outbreak\",\n                value: level.value,\n                checked: formData.outbreak === level.value,\n                onChange: e => handleInputChange('outbreak', parseInt(e.target.value)),\n                className: \"mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-sm\",\n                  children: level.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: level.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, level.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setFormData({\n                city: 'Delhi',\n                date: new Date().toISOString().split('T')[0],\n                aqi: 150,\n                temperature: 25,\n                outbreak: 0\n              });\n              setErrors({});\n            },\n            className: \"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || loadingExternalData,\n            className: \"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\",\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: loading ? 'Generating Prediction...' : 'Generate Prediction'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-blue-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-sm font-medium text-blue-900 mb-2\",\n          children: \"Tips for Accurate Predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm text-blue-800 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 AQI and temperature are auto-filled with current data for the selected city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Select festivals that fall within \\xB13 days of your prediction date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Outbreak levels reflect current public health status in the region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Predictions are most accurate for dates within the next 7 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionForm, \"35zfSRXt0uvJTkXpoSJKk/gXcXg=\");\n_c = PredictionForm;\nexport default PredictionForm;\nvar _c;\n$RefreshReg$(_c, \"PredictionForm\");","map":{"version":3,"names":["React","useState","useEffect","getCurrentAQI","getCurrentWeather","jsxDEV","_jsxDEV","PredictionForm","onSubmit","loading","_s","formData","setFormData","city","date","Date","toISOString","split","aqi","temperature","outbreak","loadingExternalData","setLoadingExternalData","errors","setErrors","cities","name","value","festivals","outbreakLevels","label","description","fetchCurrentData","weather","Promise","all","prev","Math","round","error","console","validateForm","newErrors","trim","selectedDate","today","maxDate","setDate","getDate","Object","keys","length","handleSubmit","e","preventDefault","handleInputChange","field","getAQIColor","getAQILabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","map","type","min","max","now","parseInt","parseFloat","step","festival","undefined","level","checked","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/subha/OneDrive/Desktop/mumbai/Agentic Ai/MediPulse-AI/frontend/src/components/PredictionForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PredictionRequest, City, Festival } from '../types';\r\nimport { getCurrentAQI, getCurrentWeather } from '../services/api';\r\n\r\ninterface PredictionFormProps {\r\n  onSubmit: (request: PredictionRequest) => Promise<void>;\r\n  loading: boolean;\r\n}\r\n\r\nconst PredictionForm: React.FC<PredictionFormProps> = ({ onSubmit, loading }) => {\r\n  const [formData, setFormData] = useState<PredictionRequest>({\r\n    city: 'Delhi',\r\n    date: new Date().toISOString().split('T')[0],\r\n    aqi: 150,\r\n    temperature: 25,\r\n    outbreak: 0\r\n  });\r\n\r\n  const [loadingExternalData, setLoadingExternalData] = useState(false);\r\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\r\n\r\n  const cities: City[] = [\r\n    { name: 'Delhi', value: 'Delhi' },\r\n    { name: 'Mumbai', value: 'Mumbai' },\r\n    { name: 'Bangalore', value: 'Bangalore' },\r\n    { name: 'Chennai', value: 'Chennai' },\r\n    { name: 'Kolkata', value: 'Kolkata' },\r\n  ];\r\n\r\n  const festivals: Festival[] = [\r\n    { name: 'Diwali', date: '2025-11-02' },\r\n    { name: 'Holi', date: '2025-03-14' },\r\n    { name: 'Eid', date: '2025-04-10' },\r\n    { name: 'Christmas', date: '2025-12-25' },\r\n    { name: 'Dussehra', date: '2025-10-12' },\r\n  ];\r\n\r\n  const outbreakLevels = [\r\n    { value: 0, label: 'No Outbreak', description: 'Normal conditions' },\r\n    { value: 1, label: 'Localized', description: 'Small area affected' },\r\n    { value: 2, label: 'Regional', description: 'City-wide impact' },\r\n    { value: 3, label: 'Epidemic', description: 'Multi-city spread' },\r\n  ];\r\n\r\n  // Auto-fetch current environmental data when city changes\r\n  useEffect(() => {\r\n    const fetchCurrentData = async () => {\r\n      if (!formData.city) return;\r\n      \r\n      setLoadingExternalData(true);\r\n      try {\r\n        const [aqi, weather] = await Promise.all([\r\n          getCurrentAQI(formData.city),\r\n          getCurrentWeather(formData.city)\r\n        ]);\r\n\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          aqi: Math.round(aqi),\r\n          temperature: Math.round(weather.temperature * 10) / 10\r\n        }));\r\n      } catch (error) {\r\n        console.error('Failed to fetch current data:', error);\r\n      } finally {\r\n        setLoadingExternalData(false);\r\n      }\r\n    };\r\n\r\n    fetchCurrentData();\r\n  }, [formData.city]);\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: {[key: string]: string} = {};\r\n\r\n    if (!formData.city.trim()) {\r\n      newErrors.city = 'City is required';\r\n    }\r\n\r\n    if (!formData.date) {\r\n      newErrors.date = 'Date is required';\r\n    } else {\r\n      const selectedDate = new Date(formData.date);\r\n      const today = new Date();\r\n      const maxDate = new Date();\r\n      maxDate.setDate(today.getDate() + 30); // Allow up to 30 days in the future\r\n\r\n      if (selectedDate > maxDate) {\r\n        newErrors.date = 'Date cannot be more than 30 days in the future';\r\n      }\r\n    }\r\n\r\n    if (formData.aqi < 0 || formData.aqi > 500) {\r\n      newErrors.aqi = 'AQI must be between 0 and 500';\r\n    }\r\n\r\n    if (formData.temperature < -50 || formData.temperature > 60) {\r\n      newErrors.temperature = 'Temperature must be between -50°C and 60°C';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await onSubmit(formData);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof PredictionRequest, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => {\r\n        const newErrors = {...prev};\r\n        delete newErrors[field];\r\n        return newErrors;\r\n      });\r\n    }\r\n  };\r\n\r\n  const getAQIColor = (aqi: number) => {\r\n    if (aqi > 300) return 'text-red-600';\r\n    if (aqi > 200) return 'text-orange-600';\r\n    if (aqi > 100) return 'text-yellow-600';\r\n    return 'text-green-600';\r\n  };\r\n\r\n  const getAQILabel = (aqi: number) => {\r\n    if (aqi > 300) return 'Hazardous';\r\n    if (aqi > 200) return 'Very Unhealthy';\r\n    if (aqi > 150) return 'Unhealthy';\r\n    if (aqi > 100) return 'Unhealthy for Sensitive Groups';\r\n    if (aqi > 50) return 'Moderate';\r\n    return 'Good';\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-sm border\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">New Patient Load Prediction</h2>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            Enter the parameters below to generate a forecast for hospital patient admissions.\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* City Selection */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              City *\r\n            </label>\r\n            <select\r\n              value={formData.city}\r\n              onChange={(e) => handleInputChange('city', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                errors.city ? 'border-red-300' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              {cities.map(city => (\r\n                <option key={city.value} value={city.value}>\r\n                  {city.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.city && <p className=\"text-red-600 text-sm mt-1\">{errors.city}</p>}\r\n          </div>\r\n\r\n          {/* Date Selection */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Date *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) => handleInputChange('date', e.target.value)}\r\n              min={new Date().toISOString().split('T')[0]}\r\n              max={new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}\r\n              className={`w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                errors.date ? 'border-red-300' : 'border-gray-300'\r\n              }`}\r\n            />\r\n            {errors.date && <p className=\"text-red-600 text-sm mt-1\">{errors.date}</p>}\r\n          </div>\r\n\r\n          {/* Environmental Data */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {/* AQI */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Air Quality Index (AQI) *\r\n                {loadingExternalData && (\r\n                  <span className=\"ml-2 text-xs text-blue-600\">(Auto-updating...)</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={formData.aqi}\r\n                onChange={(e) => handleInputChange('aqi', parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"500\"\r\n                className={`w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.aqi ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n              />\r\n              <div className=\"mt-1 flex justify-between items-center\">\r\n                <span className={`text-sm font-medium ${getAQIColor(formData.aqi)}`}>\r\n                  {getAQILabel(formData.aqi)}\r\n                </span>\r\n                <span className=\"text-xs text-gray-500\">Range: 0-500</span>\r\n              </div>\r\n              {errors.aqi && <p className=\"text-red-600 text-sm mt-1\">{errors.aqi}</p>}\r\n            </div>\r\n\r\n            {/* Temperature */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Temperature (°C) *\r\n                {loadingExternalData && (\r\n                  <span className=\"ml-2 text-xs text-blue-600\">(Auto-updating...)</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={formData.temperature}\r\n                onChange={(e) => handleInputChange('temperature', parseFloat(e.target.value) || 0)}\r\n                step=\"0.1\"\r\n                min=\"-50\"\r\n                max=\"60\"\r\n                className={`w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.temperature ? 'border-red-300' : 'border-gray-300'\r\n                }`}\r\n              />\r\n              <div className=\"mt-1 text-xs text-gray-500\">Range: -50°C to 60°C</div>\r\n              {errors.temperature && <p className=\"text-red-600 text-sm mt-1\">{errors.temperature}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Festival Selection */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Festival (Optional)\r\n            </label>\r\n            <select\r\n              value={formData.festival || ''}\r\n              onChange={(e) => handleInputChange('festival', e.target.value || undefined)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">No Festival</option>\r\n              {festivals.map(festival => (\r\n                <option key={festival.name} value={festival.name}>\r\n                  {festival.name} ({festival.date})\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Select if there's a major festival on or around the prediction date\r\n            </p>\r\n          </div>\r\n\r\n          {/* Outbreak Level */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Outbreak Level *\r\n            </label>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n              {outbreakLevels.map(level => (\r\n                <label key={level.value} className=\"flex items-center p-3 border rounded-md cursor-pointer hover:bg-gray-50\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"outbreak\"\r\n                    value={level.value}\r\n                    checked={formData.outbreak === level.value}\r\n                    onChange={(e) => handleInputChange('outbreak', parseInt(e.target.value))}\r\n                    className=\"mr-3\"\r\n                  />\r\n                  <div>\r\n                    <div className=\"font-medium text-sm\">{level.label}</div>\r\n                    <div className=\"text-xs text-gray-500\">{level.description}</div>\r\n                  </div>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setFormData({\r\n                  city: 'Delhi',\r\n                  date: new Date().toISOString().split('T')[0],\r\n                  aqi: 150,\r\n                  temperature: 25,\r\n                  outbreak: 0\r\n                });\r\n                setErrors({});\r\n              }}\r\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading || loadingExternalData}\r\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\r\n            >\r\n              {loading && <div className=\"loading-spinner\"></div>}\r\n              <span>{loading ? 'Generating Prediction...' : 'Generate Prediction'}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Help Text */}\r\n        <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-blue-900 mb-2\">Tips for Accurate Predictions</h4>\r\n          <ul className=\"text-sm text-blue-800 space-y-1\">\r\n            <li>• AQI and temperature are auto-filled with current data for the selected city</li>\r\n            <li>• Select festivals that fall within ±3 days of your prediction date</li>\r\n            <li>• Outbreak levels reflect current public health status in the region</li>\r\n            <li>• Predictions are most accurate for dates within the next 7 days</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}