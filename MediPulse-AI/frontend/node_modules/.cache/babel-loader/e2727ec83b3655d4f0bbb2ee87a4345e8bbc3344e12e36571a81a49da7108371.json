{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subha\\\\OneDrive\\\\Desktop\\\\mumbai\\\\Agentic Ai\\\\MediPulse-AI\\\\frontend\\\\src\\\\components\\\\ForecastChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst ForecastChart = ({\n  data\n}) => {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          padding: 20\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          title: context => {\n            return `${context[0].label}`;\n          },\n          label: context => {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return value !== null ? `${label}: ${Math.round(value)} patients` : '';\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Timeline'\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Number of Patients'\n        },\n        beginAtZero: false,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          callback: function (value) {\n            return Math.round(value);\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      point: {\n        radius: 4,\n        hoverRadius: 6\n      },\n      line: {\n        tension: 0.3\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_c = ForecastChart;\nexport default ForecastChart;\nvar _c;\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","ForecastChart","data","options","responsive","maintainAspectRatio","plugins","legend","position","labels","usePointStyle","padding","tooltip","mode","intersect","callbacks","title","context","label","dataset","value","parsed","y","Math","round","scales","x","display","text","grid","beginAtZero","color","ticks","callback","interaction","axis","elements","point","radius","hoverRadius","line","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/subha/OneDrive/Desktop/mumbai/Agentic Ai/MediPulse-AI/frontend/src/components/ForecastChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { ChartData } from '../types';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\ninterface ForecastChartProps {\r\n  data: ChartData;\r\n}\r\n\r\nconst ForecastChart: React.FC<ForecastChartProps> = ({ data }) => {\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n        labels: {\r\n          usePointStyle: true,\r\n          padding: 20\r\n        }\r\n      },\r\n      tooltip: {\r\n        mode: 'index' as const,\r\n        intersect: false,\r\n        callbacks: {\r\n          title: (context: any) => {\r\n            return `${context[0].label}`;\r\n          },\r\n          label: (context: any) => {\r\n            const label = context.dataset.label || '';\r\n            const value = context.parsed.y;\r\n            return value !== null ? `${label}: ${Math.round(value)} patients` : '';\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Timeline'\r\n        },\r\n        grid: {\r\n          display: false\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Patients'\r\n        },\r\n        beginAtZero: false,\r\n        grid: {\r\n          color: 'rgba(0, 0, 0, 0.1)'\r\n        },\r\n        ticks: {\r\n          callback: function(value: any) {\r\n            return Math.round(value);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      mode: 'nearest' as const,\r\n      axis: 'x' as const,\r\n      intersect: false\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 4,\r\n        hoverRadius: 6\r\n      },\r\n      line: {\r\n        tension: 0.3\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}